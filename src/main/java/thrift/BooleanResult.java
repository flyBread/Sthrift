/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package thrift;

import java.util.BitSet;
import java.util.Collections;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.Map;

import org.apache.thrift.EncodingUtils;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;
import org.apache.thrift.scheme.TupleScheme;

public class BooleanResult implements org.apache.thrift.TBase<BooleanResult, BooleanResult._Fields>,
    java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct(
      "BooleanResult");

  private static final org.apache.thrift.protocol.TField RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField(
      "result", org.apache.thrift.protocol.TType.BOOL, (short) 1);
  private static final org.apache.thrift.protocol.TField ERR_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField(
      "err_code", org.apache.thrift.protocol.TType.I32, (short) 2);
  private static final org.apache.thrift.protocol.TField ERR_MSG_FIELD_DESC = new org.apache.thrift.protocol.TField(
      "err_msg", org.apache.thrift.protocol.TType.STRING, (short) 3);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();

  static {
    schemes.put(StandardScheme.class, new BooleanResultStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BooleanResultTupleSchemeFactory());
  }

  public boolean result; // optional
  public int err_code; // optional
  public String err_msg; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    RESULT((short) 1, "result"), ERR_CODE((short) 2, "err_code"), ERR_MSG((short) 3, "err_msg");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch (fieldId) {
      case 1: // RESULT
        return RESULT;
      case 2: // ERR_CODE
        return ERR_CODE;
      case 3: // ERR_MSG
        return ERR_MSG;
      default:
        return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null)
        throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __RESULT_ISSET_ID = 0;
  private static final int __ERR_CODE_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = { _Fields.RESULT, _Fields.ERR_CODE, _Fields.ERR_MSG };
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(
        _Fields.class);
    tmpMap.put(_Fields.RESULT, new org.apache.thrift.meta_data.FieldMetaData("result",
        org.apache.thrift.TFieldRequirementType.OPTIONAL,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.ERR_CODE, new org.apache.thrift.meta_data.FieldMetaData("err_code",
        org.apache.thrift.TFieldRequirementType.OPTIONAL,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ERR_MSG, new org.apache.thrift.meta_data.FieldMetaData("err_msg",
        org.apache.thrift.TFieldRequirementType.OPTIONAL,
        new org.apache.thrift.meta_data.FieldValueMetaData(
            org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BooleanResult.class,
        metaDataMap);
  }

  public BooleanResult() {}

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BooleanResult(BooleanResult other) {
    __isset_bitfield = other.__isset_bitfield;
    this.result = other.result;
    this.err_code = other.err_code;
    if (other.isSetErr_msg()) {
      this.err_msg = other.err_msg;
    }
  }

  public BooleanResult deepCopy() {
    return new BooleanResult(this);
  }

  @Override
  public void clear() {
    setResultIsSet(false);
    this.result = false;
    setErr_codeIsSet(false);
    this.err_code = 0;
    this.err_msg = null;
  }

  public boolean isResult() {
    return this.result;
  }

  public BooleanResult setResult(boolean result) {
    this.result = result;
    setResultIsSet(true);
    return this;
  }

  public void unsetResult() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RESULT_ISSET_ID);
  }

  /** Returns true if field result is set (has been assigned a value) and false otherwise */
  public boolean isSetResult() {
    return EncodingUtils.testBit(__isset_bitfield, __RESULT_ISSET_ID);
  }

  public void setResultIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RESULT_ISSET_ID, value);
  }

  public int getErr_code() {
    return this.err_code;
  }

  public BooleanResult setErr_code(int err_code) {
    this.err_code = err_code;
    setErr_codeIsSet(true);
    return this;
  }

  public void unsetErr_code() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ERR_CODE_ISSET_ID);
  }

  /** Returns true if field err_code is set (has been assigned a value) and false otherwise */
  public boolean isSetErr_code() {
    return EncodingUtils.testBit(__isset_bitfield, __ERR_CODE_ISSET_ID);
  }

  public void setErr_codeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ERR_CODE_ISSET_ID, value);
  }

  public String getErr_msg() {
    return this.err_msg;
  }

  public BooleanResult setErr_msg(String err_msg) {
    this.err_msg = err_msg;
    return this;
  }

  public void unsetErr_msg() {
    this.err_msg = null;
  }

  /** Returns true if field err_msg is set (has been assigned a value) and false otherwise */
  public boolean isSetErr_msg() {
    return this.err_msg != null;
  }

  public void setErr_msgIsSet(boolean value) {
    if (!value) {
      this.err_msg = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case RESULT:
      if (value == null) {
        unsetResult();
      } else {
        setResult((Boolean) value);
      }
      break;

    case ERR_CODE:
      if (value == null) {
        unsetErr_code();
      } else {
        setErr_code((Integer) value);
      }
      break;

    case ERR_MSG:
      if (value == null) {
        unsetErr_msg();
      } else {
        setErr_msg((String) value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case RESULT:
      return Boolean.valueOf(isResult());

    case ERR_CODE:
      return Integer.valueOf(getErr_code());

    case ERR_MSG:
      return getErr_msg();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case RESULT:
      return isSetResult();
    case ERR_CODE:
      return isSetErr_code();
    case ERR_MSG:
      return isSetErr_msg();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BooleanResult)
      return this.equals((BooleanResult) that);
    return false;
  }

  public boolean equals(BooleanResult that) {
    if (that == null)
      return false;

    boolean this_present_result = true && this.isSetResult();
    boolean that_present_result = true && that.isSetResult();
    if (this_present_result || that_present_result) {
      if (!(this_present_result && that_present_result))
        return false;
      if (this.result != that.result)
        return false;
    }

    boolean this_present_err_code = true && this.isSetErr_code();
    boolean that_present_err_code = true && that.isSetErr_code();
    if (this_present_err_code || that_present_err_code) {
      if (!(this_present_err_code && that_present_err_code))
        return false;
      if (this.err_code != that.err_code)
        return false;
    }

    boolean this_present_err_msg = true && this.isSetErr_msg();
    boolean that_present_err_msg = true && that.isSetErr_msg();
    if (this_present_err_msg || that_present_err_msg) {
      if (!(this_present_err_msg && that_present_err_msg))
        return false;
      if (!this.err_msg.equals(that.err_msg))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(BooleanResult other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    BooleanResult typedOther = (BooleanResult) other;

    lastComparison = Boolean.valueOf(isSetResult()).compareTo(typedOther.isSetResult());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResult()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.result, typedOther.result);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetErr_code()).compareTo(typedOther.isSetErr_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetErr_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err_code, typedOther.err_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetErr_msg()).compareTo(typedOther.isSetErr_msg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetErr_msg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err_msg, typedOther.err_msg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot)
      throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BooleanResult(");
    boolean first = true;

    if (isSetResult()) {
      sb.append("result:");
      sb.append(this.result);
      first = false;
    }
    if (isSetErr_code()) {
      if (!first)
        sb.append(", ");
      sb.append("err_code:");
      sb.append(this.err_code);
      first = false;
    }
    if (isSetErr_msg()) {
      if (!first)
        sb.append(", ");
      sb.append("err_msg:");
      if (this.err_msg == null) {
        sb.append("null");
      } else {
        sb.append(this.err_msg);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(
          new org.apache.thrift.transport.TIOStreamTransport(out)));
    }
    catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException,
      ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(
          new org.apache.thrift.transport.TIOStreamTransport(in)));
    }
    catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BooleanResultStandardSchemeFactory implements SchemeFactory {
    public BooleanResultStandardScheme getScheme() {
      return new BooleanResultStandardScheme();
    }
  }

  private static class BooleanResultStandardScheme extends StandardScheme<BooleanResult> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BooleanResult struct)
        throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true) {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
          break;
        }
        switch (schemeField.id) {
        case 1: // RESULT
          if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
            struct.result = iprot.readBool();
            struct.setResultIsSet(true);
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          break;
        case 2: // ERR_CODE
          if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
            struct.err_code = iprot.readI32();
            struct.setErr_codeIsSet(true);
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          break;
        case 3: // ERR_MSG
          if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
            struct.err_msg = iprot.readString();
            struct.setErr_msgIsSet(true);
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          break;
        default:
          org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BooleanResult struct)
        throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetResult()) {
        oprot.writeFieldBegin(RESULT_FIELD_DESC);
        oprot.writeBool(struct.result);
        oprot.writeFieldEnd();
      }
      if (struct.isSetErr_code()) {
        oprot.writeFieldBegin(ERR_CODE_FIELD_DESC);
        oprot.writeI32(struct.err_code);
        oprot.writeFieldEnd();
      }
      if (struct.err_msg != null) {
        if (struct.isSetErr_msg()) {
          oprot.writeFieldBegin(ERR_MSG_FIELD_DESC);
          oprot.writeString(struct.err_msg);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BooleanResultTupleSchemeFactory implements SchemeFactory {
    public BooleanResultTupleScheme getScheme() {
      return new BooleanResultTupleScheme();
    }
  }

  private static class BooleanResultTupleScheme extends TupleScheme<BooleanResult> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BooleanResult struct)
        throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetResult()) {
        optionals.set(0);
      }
      if (struct.isSetErr_code()) {
        optionals.set(1);
      }
      if (struct.isSetErr_msg()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetResult()) {
        oprot.writeBool(struct.result);
      }
      if (struct.isSetErr_code()) {
        oprot.writeI32(struct.err_code);
      }
      if (struct.isSetErr_msg()) {
        oprot.writeString(struct.err_msg);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BooleanResult struct)
        throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.result = iprot.readBool();
        struct.setResultIsSet(true);
      }
      if (incoming.get(1)) {
        struct.err_code = iprot.readI32();
        struct.setErr_codeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.err_msg = iprot.readString();
        struct.setErr_msgIsSet(true);
      }
    }
  }

}
